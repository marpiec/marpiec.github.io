{"version":3,"sources":["app/scripts/tools/PositionXY.ts","app/scripts/tools/DragBehavior.ts","app/scripts/graph/GraphModel.ts","app/scripts/graph/GraphCommandBus.ts","app/scripts/graph/GraphNodeDrag.ts","app/scripts/graph/GraphController.ts","app/scripts/Main.ts"],"names":[],"mappings":"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","file":"../GraphEditor/main.js","sourcesContent":["class PositionXY {\n    readonly x: number;\n    readonly y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n}\n","namespace d3tools {\n\n    /**\n     * It is a wrapper of drag functionality of D3.\n     * It provides child class with a support for multiple drag phases.\n     */\n    export abstract class DragBehavior<T> {\n\n        private selection: d3.Selection<T>;\n        /** Dragged distance is used to determine if it was a drag, or a click. */\n        private draggedDistance: number = 0;\n\n        constructor(selection: d3.Selection<T>) {\n            this.selection = selection;\n        }\n\n        abstract dragOrigin(draggedElement: d3.Selection<T>, eventPosition: PositionXY, model: T): {x: number;y: number};\n\n        abstract dragStarted(draggedElement: d3.Selection<T>, eventPosition: PositionXY, model: T): void;\n\n        abstract dragged(draggedElement: d3.Selection<T>, eventPosition: PositionXY, model: T): void;\n\n        abstract dragEnded(draggedElement: d3.Selection<T>, eventPosition: PositionXY, model: T): void;\n\n        init() {\n            const drag = d3.behavior.drag()\n                .origin(this.dragOriginInternal())\n                .on(\"dragstart\", this.internalStart())\n                .on(\"drag\", this.internalDragged())\n                .on(\"dragend\", this.internalEnd());\n\n            this.selection.call(drag);\n        }\n\n        isInPlaceClick() {\n            return this.draggedDistance < 8;\n        }\n\n        dragOriginInternal() {\n            const externalThis = this;\n            return function (d: T) {\n\n                const x = d3.mouse(document.body)[0];\n                const y = d3.mouse(document.body)[1];\n                const eventTarget = d3.select(<any>this);\n                const origin = externalThis.dragOrigin(eventTarget, new PositionXY(x, y), <T>d);\n                (<any>this)[\"__origin__\"] = origin;\n                (<any>this)[\"__origin_mouse__\"] = new PositionXY(x, y);\n                return origin;\n            }\n        }\n\n        internalStart() {\n            const externalThis = this;\n            return function (d: T) {\n\n                externalThis.draggedDistance = 0;\n                const eventTarget = d3.select(<any>this);\n                const origin = (<any>this)[\"__origin__\"];\n                const originMouse = <PositionXY>(<any>this)[\"__origin_mouse__\"];\n                const eventX = origin.x + d3.mouse(document.body)[0] - originMouse.x;\n                const eventY = origin.y + d3.mouse(document.body)[1] - originMouse.y;\n\n                (<any>this)[\"__last_position__\"] = {x: eventX, y: eventY};\n                externalThis.dragStarted(eventTarget, new PositionXY(eventX, eventY), <T>d);\n            }\n        }\n\n\n        internalDragged() {\n            const externalThis = this;\n            return function (d: T) {\n\n                externalThis.draggedDistance++;\n                const eventTarget = d3.select(<any>this);\n                const origin = (<any>this)[\"__origin__\"];\n                const originMouse = <PositionXY>(<any>this)[\"__origin_mouse__\"];\n                const eventX = origin.x + d3.mouse(document.body)[0] - originMouse.x;\n                const eventY = origin.y + d3.mouse(document.body)[1] - originMouse.y;\n                (<any>this)[\"__last_position__\"] = {x: eventX, y: eventY};\n                externalThis.dragged(eventTarget, new PositionXY(eventX, eventY), <T>d);\n            }\n        }\n\n        internalEnd() {\n            const externalThis = this;\n            return function (d: T) {\n                const eventTarget = d3.select(<any>this);\n                delete (<any>this)[\"__origin__\"];\n                delete (<any>this)[\"__origin_mouse__\"];\n                const lastPosition: {x: number;y: number} = (<any>this)[\"__last_position__\"];\n                delete (<any>this)[\"__last_position__\"];\n                externalThis.dragEnded(eventTarget, new PositionXY(lastPosition.x, lastPosition.y), <T>d);\n            }\n        }\n\n\n    }\n}\n","namespace graph {\n\n    export enum DragMode {\n        dragNode, drawEdge\n    }\n\n    export class GraphViewModel {\n        nodes: Array<GraphNode>;\n        edges: Array<GraphEdge>;\n\n        dragMode: DragMode = DragMode.dragNode;\n        activeElement: GraphNode | GraphEdge | null;\n\n        readonly nodesRadius = 30;\n\n        constructor(nodes: Array<GraphNode>, edges: Array<GraphEdge>) {\n            this.nodes = nodes;\n            this.edges = edges;\n            this.activeElement = null;\n        }\n\n        static empty() {\n            return new GraphViewModel([], []);\n        }\n\n        nodeById(id: number): GraphNode {\n            return <GraphNode>_(this.nodes).find((n: GraphNode) => n.id === id);\n        }\n\n        nodeByPosition(position: PositionXY): GraphNode | null {\n            const matchingNodes = this.nodes.filter(n =>\n                Math.pow(n.position.x - position.x, 2) + Math.pow(n.position.y - position.y, 2) < this.nodesRadius * this.nodesRadius);\n\n            if(matchingNodes.length > 0) {\n                return matchingNodes[0];\n            } else {\n                return null;\n            }\n\n        }\n    }\n\n    export class GraphNode {\n        id: number;\n        position: PositionXY;\n\n        constructor(id: number, position: PositionXY) {\n            this.id = id;\n            this.position = position;\n        }\n    }\n\n    export class GraphEdge {\n        id: number;\n        fromNodeId: number;\n        toNodeId: number;\n\n        constructor(id: number, fromNodeId: number, toNodeId: number) {\n            this.id = id;\n            this.fromNodeId = fromNodeId;\n            this.toNodeId = toNodeId;\n        }\n    }\n\n}","///<reference path=\"GraphModel.ts\"/>\n\nnamespace graph {\n\n    export class GraphCommandBus {\n\n        private model: GraphViewModel;\n        private updateListeners: Array<() => void> = [];\n\n        constructor(model: GraphViewModel) {\n            this.model = model;\n        }\n\n        registerUpdateListener(listener: () => void): void {\n            this.updateListeners.push(listener);\n        }\n\n        callUpdateListeners(): void {\n            this.updateListeners.forEach(listener => listener());\n        }\n\n        activateElement(element: GraphNode | GraphEdge): void {\n            this.model.activeElement = element;\n            this.callUpdateListeners();\n        }\n\n        deleteActiveElement() {\n            if (this.model.activeElement instanceof GraphNode) {\n                this.deleteNode(this.model.activeElement);\n            } else if (this.model.activeElement instanceof GraphEdge) {\n                this.deleteEdge(this.model.activeElement);\n            }\n        }\n\n        private deleteEdge(edge: GraphEdge) {\n            this.model.edges = this.model.edges.filter(e => e !== edge);\n            this.callUpdateListeners();\n        }\n\n        private deleteNode(node: GraphNode) {\n            this.model.nodes = this.model.nodes.filter(n => n !== node);\n            this.model.edges = this.model.edges.filter(e => e.fromNodeId !== node.id && e.toNodeId != node.id);\n            this.callUpdateListeners();\n        }\n\n        addNode(x: number, y: number): GraphNode {\n            let maxId = 0;\n            this.model.nodes.forEach(n => maxId = Math.max(maxId, n.id));\n            let node = new GraphNode(maxId + 1, new PositionXY(x, y));\n            this.model.nodes.push(node);\n            this.model.activeElement = node;\n            this.callUpdateListeners();\n            return node;\n        }\n\n        toggleDragMode() {\n            if(this.model.dragMode === DragMode.dragNode) {\n                this.model.dragMode = DragMode.drawEdge;\n            } else {\n                this.model.dragMode = DragMode.dragNode;\n            }\n            this.callUpdateListeners();\n        }\n\n        updateNodePosition(node: GraphNode, position: PositionXY) {\n            node.position = position;\n            this.callUpdateListeners();\n        }\n\n        addEdgeIfPossible(fromNode: GraphNode, position: PositionXY) {\n\n            const toNode = this.model.nodeByPosition(position);\n\n            if(toNode) {\n                const edgeNotYetExists = this.model.edges.filter(e => e.fromNodeId === fromNode.id && e.toNodeId === toNode.id ||\n                    e.fromNodeId === toNode.id && e.toNodeId === fromNode.id).length == 0;\n                const differentNodes = fromNode.id !== toNode.id;\n                if(edgeNotYetExists && differentNodes) {\n                    this.addEdge(fromNode, toNode);\n                }\n            } else {\n                const newNode = this.addNode(position.x, position.y);\n                this.addEdge(fromNode, newNode);\n            }\n        }\n\n        private addEdge(fromNode: GraphNode, toNode: GraphNode) {\n            let maxId = 0;\n            this.model.edges.forEach(n => maxId = Math.max(maxId, n.id));\n            this.model.edges.push(new GraphEdge(maxId + 1, fromNode.id, toNode.id));\n            this.model.activeElement = toNode;\n            this.callUpdateListeners();\n        }\n    }\n\n}","///<reference path=\"../tools/DragBehavior.ts\"/>\n\n\nnamespace graph {\n\n    import DragBehavior = d3tools.DragBehavior;\n\n    export class GraphNodeDrag extends DragBehavior<GraphNode> {\n\n        private commandBus: GraphCommandBus;\n\n        private constructor(selection: d3.Selection<GraphNode>, commandBus: GraphCommandBus) {\n            super(selection);\n            this.commandBus = commandBus;\n        }\n\n        static enable(selection: d3.Selection<GraphNode>, commandBus: GraphCommandBus) {\n            new GraphNodeDrag(selection, commandBus).init();\n        }\n\n        dragOrigin(draggedElement: d3.Selection<GraphNode>, eventPosition: PositionXY, model: GraphNode): {x: number; y: number} {\n            return {x: model.position.x, y: model.position.y};\n        }\n\n        dragStarted(draggedElement: d3.Selection<GraphNode>, eventPosition: PositionXY, model: GraphNode): void {\n            this.commandBus.activateElement(model);\n            this.commandBus.updateNodePosition(model, eventPosition);\n        }\n\n        dragged(draggedElement: d3.Selection<GraphNode>, eventPosition: PositionXY, model: GraphNode): void {\n            this.commandBus.updateNodePosition(model, eventPosition);\n        }\n\n        dragEnded(draggedElement: d3.Selection<GraphNode>, eventPosition: PositionXY, model: GraphNode): void {\n            this.commandBus.updateNodePosition(model, eventPosition);\n        }\n\n    }\n\n\n    export class GraphNodeEdgeDraw extends DragBehavior<GraphNode> {\n\n        private commandBus: GraphCommandBus;\n        private model: GraphViewModel;\n        private edgeMock: d3.Selection<void>;\n        private graphCanvas: d3.Selection<void>;\n\n        constructor(selection: d3.Selection<GraphNode>, commandBus: GraphCommandBus, model: GraphViewModel, edgeMock: d3.Selection<void>, graphCanvas: d3.Selection<void>) {\n            super(selection);\n            this.commandBus = commandBus;\n            this.model = model;\n            this.edgeMock = edgeMock;\n            this.graphCanvas = graphCanvas;\n        }\n\n        static enable(selection: d3.Selection<GraphNode>, commandBus: GraphCommandBus, model: GraphViewModel, edgeMock: d3.Selection<void>, graphCanvas: d3.Selection<void>) {\n            new GraphNodeEdgeDraw(selection, commandBus, model, edgeMock, graphCanvas).init();\n        }\n\n        dragOrigin(draggedElement: d3.Selection<GraphNode>, eventPosition: PositionXY, model: GraphNode): {x: number; y: number} {\n            return {x: eventPosition.x, y: eventPosition.y};\n        }\n\n        dragStarted(draggedElement: d3.Selection<GraphNode>, eventPosition: PositionXY, model: GraphNode): void {\n            this.commandBus.activateElement(model);\n\n            this.graphCanvas\n                .classed(\"dragMode\", true);\n\n\n            this.edgeMock\n                .classed(\"hidden\", false)\n                .attr(\"x1\", model.position.x)\n                .attr(\"y1\", model.position.y)\n                .attr(\"x2\", eventPosition.x)\n                .attr(\"y2\", eventPosition.y);\n\n        }\n\n        dragged(draggedElement: d3.Selection<GraphNode>, eventPosition: PositionXY, model: GraphNode): void {\n\n            const node = this.model.nodeByPosition(eventPosition);\n\n            this.edgeMock\n                .attr(\"x1\", model.position.x)\n                .attr(\"y1\", model.position.y);\n\n            if(node) {\n                this.edgeMock\n                    .attr(\"x2\", node.position.x)\n                    .attr(\"y2\", node.position.y);\n            } else {\n                this.edgeMock\n                    .attr(\"x2\", eventPosition.x)\n                    .attr(\"y2\", eventPosition.y);\n            }\n\n        }\n\n        dragEnded(draggedElement: d3.Selection<GraphNode>, eventPosition: PositionXY, model: GraphNode): void {\n            this.edgeMock\n                .classed(\"hidden\", true);\n\n            this.graphCanvas\n                .classed(\"dragMode\", false);\n\n            this.commandBus.addEdgeIfPossible(model, eventPosition);\n        }\n\n    }\n\n}","///<reference path=\"../tools/PositionXY.ts\"/>\n///<reference path=\"../tools/DragBehavior.ts\"/>\n///<reference path=\"GraphCommandBus.ts\"/>\n///<reference path=\"GraphNodeDrag.ts\"/>\n\nnamespace graph {\n\n    export class GraphController {\n\n        private model: GraphViewModel;\n        private commandBus: GraphCommandBus;\n\n        private canvas: d3.Selection<void>;\n        private edgesLayer: d3.Selection<void>;\n        private nodesLayer: d3.Selection<void>;\n        private dragModeButton: d3.Selection<void>;\n        private edgeMock: d3.Selection<void>;\n\n        constructor(container: d3.Selection<void>, model: GraphViewModel, commandBus: GraphCommandBus) {\n            this.model = model;\n            this.commandBus = commandBus;\n\n            container.html(`\n                <svg class=\"canvas\">\n                    <g class=\"edgesLayer\"></g>\n                    <line class=\"edgeMock hidden\"></line>\n                    <g class=\"nodesLayer\"></g>              \n                </svg>\n                <button class=\"dragModeButton\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>`);\n\n\n            this.dragModeButton = container.select(\".dragModeButton\");\n            this.canvas = container.select(\".canvas\");\n            this.edgesLayer = container.select(\".edgesLayer\");\n            this.nodesLayer = container.select(\".nodesLayer\");\n            this.edgeMock = container.select(\".edgeMock\");\n\n\n            d3.select(window).on('resize', () => {\n                this.updateContainerSize();\n            });\n\n            d3.select(\"body\").on(\"keydown\", () => {\n                const deleteKeyCode = 46;\n                if((<KeyboardEvent>d3.event).keyCode === deleteKeyCode) {\n                    this.commandBus.deleteActiveElement();\n                }\n            });\n\n            this.canvas.on(\"dblclick\", () => {\n                const mouseEvent = (<MouseEvent>d3.event);\n                this.commandBus.addNode(mouseEvent.x, mouseEvent.y);\n            });\n\n            this.updateContainerSize();\n\n            this.commandBus.registerUpdateListener(() => {\n                this.updateView();\n            });\n\n            this.dragModeButton.on(\"mousedown\", () => {\n               this.commandBus.toggleDragMode();\n            });\n        }\n\n\n        private updateContainerSize() {\n\n            const width = window.innerWidth\n                || document.documentElement.clientWidth\n                || document.body.clientWidth;\n\n            const height = window.innerHeight\n                || document.documentElement.clientHeight\n                || document.body.clientHeight;\n\n            this.canvas\n                .attr(\"width\", width)\n                .attr(\"height\", height);\n        }\n\n        updateView() {\n            this.updateEdgesView();\n            this.updateNodesView();\n            this.updateButtonsView();\n            this.initNodesDrag();\n        }\n\n        private updateEdgesView() {\n            // Bind data to edges\n            const edges = this.edgesLayer.selectAll(\"line.graphEdge\")\n                .data(this.model.edges);\n\n            // Create missing lines\n            edges.enter()\n                .append(\"line\")\n                .classed(\"graphEdge\", true);\n\n            // Remove not needed lines\n            edges.exit()\n                .remove();\n\n            this.edgesLayer.selectAll(\"line.graphEdge\")\n                .attr(\"x1\", (d: GraphEdge) => this.model.nodeById(d.fromNodeId).position.x)\n                .attr(\"y1\", (d: GraphEdge) => this.model.nodeById(d.fromNodeId).position.y)\n                .attr(\"x2\", (d: GraphEdge) => this.model.nodeById(d.toNodeId).position.x)\n                .attr(\"y2\", (d: GraphEdge) => this.model.nodeById(d.toNodeId).position.y)\n                .classed(\"active\", (d: GraphEdge) => this.model.activeElement === d)\n                .on(\"mousedown\", (d: GraphEdge) => {\n                    this.commandBus.activateElement(d);\n                    (<MouseEvent>d3.event).preventDefault();\n                });\n        }\n\n        private updateNodesView() {\n            // Bind data to nodes\n            const nodes = this.nodesLayer.selectAll(\"circle.graphNode\")\n                .data(this.model.nodes);\n\n            // Create missing circles\n            nodes.enter()\n                .append(\"circle\")\n                .classed(\"graphNode\", true);\n\n            // Remove not needed circles\n            nodes.exit()\n                .remove();\n\n            this.nodesLayer.selectAll(\"circle.graphNode\")\n                .attr(\"cx\", (d: GraphNode) => d.position.x)\n                .attr(\"cy\", (d: GraphNode) => d.position.y)\n                .attr(\"r\", this.model.nodesRadius)\n                .classed(\"active\", (d: GraphNode) => this.model.activeElement === d);\n        }\n\n        private initNodesDrag() {\n            if(this.model.dragMode === DragMode.dragNode) {\n                GraphNodeDrag.enable(this.nodesLayer.selectAll(\"circle.graphNode\"), this.commandBus);\n            } else if(this.model.dragMode === DragMode.drawEdge) {\n                GraphNodeEdgeDraw.enable(this.nodesLayer.selectAll(\"circle.graphNode\"), this.commandBus, this.model, this.edgeMock, this.canvas);\n            }\n\n\n        }\n\n        private updateButtonsView() {\n            this.dragModeButton\n                .classed(\"enabled\", this.model.dragMode === DragMode.drawEdge);\n        }\n    }\n\n}","///<reference path=\"../libs.d.ts/d3-v3.5.d.ts\"/>\n///<reference path=\"graph/GraphController.ts\"/>\n\nnamespace main {\n\n    import GraphController = graph.GraphController;\n    import GraphCommandBus = graph.GraphCommandBus;\n    import GraphModel = graph.GraphViewModel;\n\n    export class Main {\n\n        private graphController: GraphController;\n\n        constructor() {\n            const model = GraphModel.empty();\n            const commandBus = new GraphCommandBus(model);\n\n            const mainContainer = d3.select(\"#main\");\n\n            this.graphController = new GraphController(mainContainer, model, commandBus);\n        }\n\n        start() {\n            this.graphController.updateView();\n        }\n\n    }\n\n    new Main().start();\n\n}"]}